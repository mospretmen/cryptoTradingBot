<% include partials/header %>

<center>
  <div class="ui container">
    <div class="ui equal width grid">
          <div class="left floated left aligned column">
          <h5>  
            <img class="ui middle aligned circular tiny image" src="/uploads/robot4.png" style="opacity:0.9">
              Binance Crypto Bot - Performance Data
          </h5>    
          </div>
    </div>
    <div class="ui divider"></div>
    <div class="ui centered stackable two column grid">
      
      
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>Account Data</th>
                <th>Inception: <%= moment("20181109", "YYYYMMDD").fromNow(); %></th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Total Invested</td>
                  <td><% var totalEthInvested = []; for (var i=0; i < balanceHistory.length; i++){totalEthInvested.push(balanceHistory[i].cashFlow)} %>
                  <%= _.sum(totalEthInvested).toFixed(2) %> ETH
                  </td>
                </tr>
                <tr>
                  <td>Total Balance</td>
                  <td><%= balanceHistory[balanceHistory.length -1].totalBalancePlusCashFLow %> ETH</td>
                </tr>
                <tr>
                  <td>Total Profit or Loss</td>
                  <% if ((+balanceHistory[balanceHistory.length -1].totalBalancePlusCashFLow - +_.sum(totalEthInvested)) > 0 ) { %> 
                    <td class="ui green message">
                      <%= (+balanceHistory[balanceHistory.length -1].totalBalancePlusCashFLow - +_.sum(totalEthInvested)).toFixed(2) %> ETH or 
                      <%= (((+balanceHistory[balanceHistory.length -1].totalBalancePlusCashFLow / +_.sum(totalEthInvested))-1)*100).toFixed(2) %> %
                    </td>
                  <% } else { %>  
                    <td class="ui red message">
                      <%= (+balanceHistory[balanceHistory.length -1].totalBalancePlusCashFLow - +_.sum(totalEthInvested)).toFixed(2) %> ETH or 
                      <%= (((+balanceHistory[balanceHistory.length -1].totalBalancePlusCashFLow / +_.sum(totalEthInvested))-1)*100).toFixed(2) %> %
                    </td>
                  <% } %>  
                </tr>
                <tr>
                  <td>Profit / Loss Ratio (Days)</td>
                    <% 
                      var i, j, arrProfit = [], arrLoss = [];
                        for ( i = 1, j = 0; i  < balanceHistory.length; i++, j++) {
                          if((balanceHistory[i].totalBalance - +balanceHistory[j].totalBalancePlusCashFLow) >= 0) {
                            arrProfit.push((balanceHistory[i].totalBalance - +balanceHistory[j].totalBalancePlusCashFLow));
                          } else {
                            arrLoss.push((balanceHistory[i].totalBalance - +balanceHistory[j].totalBalancePlusCashFLow));
                          }  
                        }
                    %>
              
              <% if(arrProfit.length / arrLoss.length >= 0) { %>
              <td class="ui green message"><%= `${arrProfit.length} / ${arrLoss.length} or ${((arrProfit.length/balanceHistory.length)*100).toFixed(2)} %`  %></td>
              <% } %>      
                </tr>
              <tr>
                <td>Max Profit & Loss (Day)</td>
                <td><%= `${Math.max(...arrProfit).toFixed(2)} & ${Math.min(...arrLoss).toFixed(2)} ETH` %></td>
              </tr>  
              </tbody>
            </table>
            
            <div class="ui divider"></div>    
            <table class="ui small equal width very compact striped table" style="fontsize: smaller">
              <tr>
                <th>Date</th>
                <th>Ending Balance</th> 
                <th>CashFlow (Deposit Or Withdrawal)</th>
                <th>Ending Balance + CashFlow</th>
                <th>Profit Or Loss</th>
              </tr>
              
              <% 
                var i, j;
                var k = i = balanceHistory.length - 15;
                  for ( i = k, j = k +-1 ; i  < balanceHistory.length; i++, j++) {
              %>
              
              <tr>
                <td><%= balanceHistory[i].date %></td>
                <td><%= balanceHistory[i].totalBalance %></td>
                <td><%= numeral(balanceHistory[i].cashFlow).format('+0.00') %></td>
                <td><%= balanceHistory[i].totalBalancePlusCashFLow %></td>
                <% if((balanceHistory[i].totalBalance - +balanceHistory[j].totalBalancePlusCashFLow) < 0) { %>
                  <td class="ui red message">
                    <%= 
                      (balanceHistory[i].totalBalance - +balanceHistory[j].totalBalancePlusCashFLow).toFixed(2) + " or " +
                      (((balanceHistory[i].totalBalance / balanceHistory[j].totalBalancePlusCashFLow)-1)*100).toFixed(1) + " %"
                    %>
                  </td>
                <% } else { %>
                  <td class="ui green message">
                    <%= 
                      (balanceHistory[i].totalBalance - +balanceHistory[j].totalBalancePlusCashFLow).toFixed(2) + " or " +
                      (((balanceHistory[i].totalBalance / balanceHistory[j].totalBalancePlusCashFLow)-1)*100).toFixed(1) + " %"
                    %>
                  </td>
                <% } %>
              </tr>
              
              <% } %>
              
              <tr>
              </tr>
            </table>
            
          </div>
          
      <div class="column">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
        <% 
        
          var dailyProfitLoss = []; 
          var dateLabels = [];
            
            for (var i = 1; i < balanceHistory.length; i++){
              dailyProfitLoss.push(balanceHistory[i].totalBalance - +balanceHistory[i-1].totalBalancePlusCashFLow);
              dateLabels.push(moment(balanceHistory[i].date,"MM/DD/YYYY").unix()*1000);
            } 
            
          var cummulativeProfitLoss = [];
          dailyProfitLoss.reduce(function(a,b,i) { return cummulativeProfitLoss[i] = a+b; },0);
          
          var timeWeightedROI = [];
          for ( var i = 0; i < cummulativeProfitLoss.length; i++) {
            timeWeightedROI.push(((cummulativeProfitLoss[i]/balanceHistory[i].totalBalancePlusCashFLow)*100));
          }
          
        %>
        
        <p><strong>Profit / Loss (ETH) & Time Weighted ROI (%)</strong></p>
        <div class="ui divider"></div>
        <br>
        <canvas id="line-chart" width="800" height="600"></canvas>
        <div style="fontSize: small;" class="ui divider"></div>
        <script>
          new Chart(document.getElementById("line-chart"), {
            type: 'line',
            data: {
              labels: [<%= dateLabels %>],
              datasets: [{
                  label: "Total Profit or Loss (ETH)",
                  type: "line",
                  borderColor: "#2543ab",
                  data: [<%= cummulativeProfitLoss %>],
                  lineTension: 0,   
                  borderWidth: 1,
                  fill: true,
                  yAxisID: 'A',
                  radius: 0
                },
                {
                  label: "Time Weighted ROI (%)",
                  type: "line",
                  borderColor: "#83a0df",
                  data: [<%= timeWeightedROI %>],
                  lineTension: 0,   
                  borderWidth: 1,
                  fill: true,
                  yAxisID: 'B',
                  radius: 0
                }
              ]
            },
            options: {
              title: {
                display: false,
                text: 'Profit / Loss (ETH) & Time Weighted ROI (%)',
                fontSize: 10
              },
              legend: { display: true, position: 'bottom', fontSize: 8},
               scales: {
           yAxes: [{
                    id: 'A',
                    type: 'linear',
                    position: 'left',
                    ticks: {
                      fontSize: 10
                    }
                  },
                  {
                    id: 'B',
                    type: 'linear',
                    position: 'right'
                  }],
            xAxes: [{
                    ticks: {
                      fontSize: 7
                    }
                  }]     
                }
            }
        });
        </script>
      </div>
    </div>
    <div class="ui divider"></div>
    
    
    <!-- ADAETH 24hrs /7 days / 30 days widget  -->
    <div class="ui grid">
      <div class="four column row">
        <div class="left floated left aligned column"><img class="ui avatar image" src="/uploads/ada.png"> <strong>ADAETH</strong> Performance Data</div>
      </div>
    </div>
    <div class="ui divider"></div>
    <div class="ui centered stackable three column grid">
    <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>ADAETH</th>
                <th>(<%= moment().subtract(7, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var ADAETHBuy = [];
                      var ADAETHSell = [];
                      var ADAETHBuyPriceMultQty = [];
                      var ADAETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "ADAETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          ADAETHBuy.push(tradeHistory[i].amount);
                          ADAETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "ADAETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          ADAETHSell.push(tradeHistory[i].amount);
                          ADAETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(ADAETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(ADAETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(ADAETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(ADAETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(ADAETHBuyPriceMultQty)/+_.sum(ADAETHBuy);
                    var weightedSell = +_.sum(ADAETHSellPriceMultQty)/+_.sum(ADAETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(ADAETHBuy), _.sum(ADAETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(ADAETHBuy), _.sum(ADAETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>ADAETH</th>
                <th>(<%= moment().subtract(30, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var ADAETHBuy = [];
                      var ADAETHSell = [];
                      var ADAETHBuyPriceMultQty = [];
                      var ADAETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "ADAETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          ADAETHBuy.push(tradeHistory[i].amount);
                          ADAETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "ADAETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          ADAETHSell.push(tradeHistory[i].amount);
                          ADAETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(ADAETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(ADAETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(ADAETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(ADAETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(ADAETHBuyPriceMultQty)/+_.sum(ADAETHBuy);
                    var weightedSell = +_.sum(ADAETHSellPriceMultQty)/+_.sum(ADAETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(ADAETHBuy), _.sum(ADAETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(ADAETHBuy), _.sum(ADAETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>ADAETH</th>
                <th>(<%= moment().subtract(90, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var ADAETHBuy = [];
                      var ADAETHSell = [];
                      var ADAETHBuyPriceMultQty = [];
                      var ADAETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "ADAETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          ADAETHBuy.push(tradeHistory[i].amount);
                          ADAETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "ADAETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          ADAETHSell.push(tradeHistory[i].amount);
                          ADAETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(ADAETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(ADAETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(ADAETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(ADAETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(ADAETHBuyPriceMultQty)/+_.sum(ADAETHBuy);
                    var weightedSell = +_.sum(ADAETHSellPriceMultQty)/+_.sum(ADAETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(ADAETHBuy), _.sum(ADAETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(ADAETHBuy), _.sum(ADAETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
    </div>      
    
    
    
    <!-- BATETH 24hrs /7 days / 30 days widget  -->
    <div class="ui grid">
      <div class="four column row">
        <div class="left floated left aligned column"><img class="ui avatar image" src="/uploads/bat.png"> <strong>BATETH</strong> Performance Data</div>
      </div>
    </div>
    <div class="ui divider"></div>
    <div class="ui centered stackable three column grid">
    <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>BATETH</th>
                <th>(<%= moment().subtract(7, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var BATETHBuy = [];
                      var BATETHSell = [];
                      var BATETHBuyPriceMultQty = [];
                      var BATETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "BATETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          BATETHBuy.push(tradeHistory[i].amount);
                          BATETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "BATETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          BATETHSell.push(tradeHistory[i].amount);
                          BATETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(BATETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(BATETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(BATETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(BATETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(BATETHBuyPriceMultQty)/+_.sum(BATETHBuy);
                    var weightedSell = +_.sum(BATETHSellPriceMultQty)/+_.sum(BATETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(BATETHBuy), _.sum(BATETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(BATETHBuy), _.sum(BATETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>BATETH</th>
                <th>(<%= moment().subtract(30, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var BATETHBuy = [];
                      var BATETHSell = [];
                      var BATETHBuyPriceMultQty = [];
                      var BATETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "BATETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          BATETHBuy.push(tradeHistory[i].amount);
                          BATETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "BATETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          BATETHSell.push(tradeHistory[i].amount);
                          BATETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(BATETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(BATETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(BATETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(BATETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(BATETHBuyPriceMultQty)/+_.sum(BATETHBuy);
                    var weightedSell = +_.sum(BATETHSellPriceMultQty)/+_.sum(BATETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(BATETHBuy), _.sum(BATETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(BATETHBuy), _.sum(BATETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>BATETH</th>
                <th>(<%= moment().subtract(90, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var BATETHBuy = [];
                      var BATETHSell = [];
                      var BATETHBuyPriceMultQty = [];
                      var BATETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "BATETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          BATETHBuy.push(tradeHistory[i].amount);
                          BATETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "BATETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          BATETHSell.push(tradeHistory[i].amount);
                          BATETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(BATETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(BATETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(BATETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(BATETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(BATETHBuyPriceMultQty)/+_.sum(BATETHBuy);
                    var weightedSell = +_.sum(BATETHSellPriceMultQty)/+_.sum(BATETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(BATETHBuy), _.sum(BATETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(BATETHBuy), _.sum(BATETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
    </div>      
    
    
    <!-- EOSETH 24hrs /7 days / 30 days widget  -->
    <div class="ui grid">
      <div class="four column row">
        <div class="left floated left aligned column"><img class="ui avatar image" src="/uploads/eos.png"> <strong>EOSETH</strong> Performance Data</div>
      </div>
    </div>
    <div class="ui divider"></div>
    <div class="ui centered stackable three column grid">
    <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>EOSETH</th>
                <th>(<%= moment().subtract(7, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var EOSETHBuy = [];
                      var EOSETHSell = [];
                      var EOSETHBuyPriceMultQty = [];
                      var EOSETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "EOSETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          EOSETHBuy.push(tradeHistory[i].amount);
                          EOSETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "EOSETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          EOSETHSell.push(tradeHistory[i].amount);
                          EOSETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(EOSETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(EOSETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(EOSETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(EOSETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(EOSETHBuyPriceMultQty)/+_.sum(EOSETHBuy);
                    var weightedSell = +_.sum(EOSETHSellPriceMultQty)/+_.sum(EOSETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(EOSETHBuy), _.sum(EOSETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(EOSETHBuy), _.sum(EOSETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>EOSETH</th>
                <th>(<%= moment().subtract(30, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var EOSETHBuy = [];
                      var EOSETHSell = [];
                      var EOSETHBuyPriceMultQty = [];
                      var EOSETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "EOSETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          EOSETHBuy.push(tradeHistory[i].amount);
                          EOSETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "EOSETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          EOSETHSell.push(tradeHistory[i].amount);
                          EOSETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(EOSETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(EOSETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(EOSETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(EOSETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(EOSETHBuyPriceMultQty)/+_.sum(EOSETHBuy);
                    var weightedSell = +_.sum(EOSETHSellPriceMultQty)/+_.sum(EOSETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(EOSETHBuy), _.sum(EOSETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(EOSETHBuy), _.sum(EOSETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>EOSETH</th>
                <th>(<%= moment().subtract(90, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var EOSETHBuy = [];
                      var EOSETHSell = [];
                      var EOSETHBuyPriceMultQty = [];
                      var EOSETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "EOSETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          EOSETHBuy.push(tradeHistory[i].amount);
                          EOSETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "EOSETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          EOSETHSell.push(tradeHistory[i].amount);
                          EOSETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(EOSETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(EOSETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(EOSETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(EOSETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(EOSETHBuyPriceMultQty)/+_.sum(EOSETHBuy);
                    var weightedSell = +_.sum(EOSETHSellPriceMultQty)/+_.sum(EOSETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(EOSETHBuy), _.sum(EOSETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(EOSETHBuy), _.sum(EOSETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
    </div>      
    
    
    <!-- TRXETH 24hrs /7 days / 30 days widget  -->
    <div class="ui grid">
      <div class="four column row">
        <div class="left floated left aligned column"><img class="ui avatar image" src="/uploads/trx.png"> <strong>TRXETH</strong> Performance Data</div>
      </div>
    </div>
    <div class="ui divider"></div>
    <div class="ui centered stackable three column grid">
    <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>TRXETH</th>
                <th>(<%= moment().subtract(7, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var TRXETHBuy = [];
                      var TRXETHSell = [];
                      var TRXETHBuyPriceMultQty = [];
                      var TRXETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "TRXETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          TRXETHBuy.push(tradeHistory[i].amount);
                          TRXETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "TRXETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          TRXETHSell.push(tradeHistory[i].amount);
                          TRXETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(TRXETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(TRXETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(TRXETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(TRXETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(TRXETHBuyPriceMultQty)/+_.sum(TRXETHBuy);
                    var weightedSell = +_.sum(TRXETHSellPriceMultQty)/+_.sum(TRXETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TRXETHBuy), _.sum(TRXETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TRXETHBuy), _.sum(TRXETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>TRXETH</th>
                <th>(<%= moment().subtract(30, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var TRXETHBuy = [];
                      var TRXETHSell = [];
                      var TRXETHBuyPriceMultQty = [];
                      var TRXETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "TRXETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          TRXETHBuy.push(tradeHistory[i].amount);
                          TRXETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "TRXETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          TRXETHSell.push(tradeHistory[i].amount);
                          TRXETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(TRXETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(TRXETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(TRXETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(TRXETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(TRXETHBuyPriceMultQty)/+_.sum(TRXETHBuy);
                    var weightedSell = +_.sum(TRXETHSellPriceMultQty)/+_.sum(TRXETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TRXETHBuy), _.sum(TRXETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TRXETHBuy), _.sum(TRXETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>TRXETH</th>
                <th>(<%= moment().subtract(90, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var TRXETHBuy = [];
                      var TRXETHSell = [];
                      var TRXETHBuyPriceMultQty = [];
                      var TRXETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "TRXETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          TRXETHBuy.push(tradeHistory[i].amount);
                          TRXETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "TRXETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          TRXETHSell.push(tradeHistory[i].amount);
                          TRXETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(TRXETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(TRXETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(TRXETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(TRXETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(TRXETHBuyPriceMultQty)/+_.sum(TRXETHBuy);
                    var weightedSell = +_.sum(TRXETHSellPriceMultQty)/+_.sum(TRXETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TRXETHBuy), _.sum(TRXETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TRXETHBuy), _.sum(TRXETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
    </div>      
    
    
 <!-- TUSDETH 24hrs /7 days / 30 days widget  -->
    <div class="ui grid">
      <div class="four column row">
        <div class="left floated left aligned column"><img class="ui avatar image" src="/uploads/tusd.png"> <strong>TUSDETH</strong> Performance Data</div>
      </div>
    </div>
    <div class="ui divider"></div>
    <div class="ui centered stackable three column grid">
    <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>TUSDETH</th>
                <th>(<%= moment().subtract(7, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var TUSDETHBuy = [];
                      var TUSDETHSell = [];
                      var TUSDETHBuyPriceMultQty = [];
                      var TUSDETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "TUSDETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          TUSDETHBuy.push(tradeHistory[i].amount);
                          TUSDETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "TUSDETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          TUSDETHSell.push(tradeHistory[i].amount);
                          TUSDETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(TUSDETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(TUSDETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(TUSDETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(TUSDETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(TUSDETHBuyPriceMultQty)/+_.sum(TUSDETHBuy);
                    var weightedSell = +_.sum(TUSDETHSellPriceMultQty)/+_.sum(TUSDETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TUSDETHBuy), _.sum(TUSDETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TUSDETHBuy), _.sum(TUSDETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>TUSDETH</th>
                <th>(<%= moment().subtract(30, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var TUSDETHBuy = [];
                      var TUSDETHSell = [];
                      var TUSDETHBuyPriceMultQty = [];
                      var TUSDETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "TUSDETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          TUSDETHBuy.push(tradeHistory[i].amount);
                          TUSDETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "TUSDETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          TUSDETHSell.push(tradeHistory[i].amount);
                          TUSDETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(TUSDETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(TUSDETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(TUSDETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(TUSDETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(TUSDETHBuyPriceMultQty)/+_.sum(TUSDETHBuy);
                    var weightedSell = +_.sum(TUSDETHSellPriceMultQty)/+_.sum(TUSDETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TUSDETHBuy), _.sum(TUSDETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TUSDETHBuy), _.sum(TUSDETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>TUSDETH</th>
                <th>(<%= moment().subtract(90, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var TUSDETHBuy = [];
                      var TUSDETHSell = [];
                      var TUSDETHBuyPriceMultQty = [];
                      var TUSDETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "TUSDETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          TUSDETHBuy.push(tradeHistory[i].amount);
                          TUSDETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "TUSDETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          TUSDETHSell.push(tradeHistory[i].amount);
                          TUSDETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(TUSDETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(TUSDETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(TUSDETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(TUSDETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(TUSDETHBuyPriceMultQty)/+_.sum(TUSDETHBuy);
                    var weightedSell = +_.sum(TUSDETHSellPriceMultQty)/+_.sum(TUSDETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TUSDETHBuy), _.sum(TUSDETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(TUSDETHBuy), _.sum(TUSDETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
    </div>          

 <!-- XRPETH 24hrs /7 days / 30 days widget  -->
    <div class="ui grid">
      <div class="four column row">
        <div class="left floated left aligned column"><img class="ui avatar image" src="/uploads/xrp.png"> <strong>XRPETH</strong> Performance Data</div>
      </div>
    </div>
    <div class="ui divider"></div>
    <div class="ui centered stackable three column grid">
    <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>XRPETH</th>
                <th>(<%= moment().subtract(7, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var XRPETHBuy = [];
                      var XRPETHSell = [];
                      var XRPETHBuyPriceMultQty = [];
                      var XRPETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "XRPETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          XRPETHBuy.push(tradeHistory[i].amount);
                          XRPETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "XRPETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(7, 'days').unix())) {
                          XRPETHSell.push(tradeHistory[i].amount);
                          XRPETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(XRPETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(XRPETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(XRPETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(XRPETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(XRPETHBuyPriceMultQty)/+_.sum(XRPETHBuy);
                    var weightedSell = +_.sum(XRPETHSellPriceMultQty)/+_.sum(XRPETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(XRPETHBuy), _.sum(XRPETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(XRPETHBuy), _.sum(XRPETHSell))).toFixed(4)  + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>XRPETH</th>
                <th>(<%= moment().subtract(30, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var XRPETHBuy = [];
                      var XRPETHSell = [];
                      var XRPETHBuyPriceMultQty = [];
                      var XRPETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "XRPETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          XRPETHBuy.push(tradeHistory[i].amount);
                          XRPETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "XRPETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(30, 'days').unix())) {
                          XRPETHSell.push(tradeHistory[i].amount);
                          XRPETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(XRPETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(XRPETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(XRPETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(XRPETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(XRPETHBuyPriceMultQty)/+_.sum(XRPETHBuy);
                    var weightedSell = +_.sum(XRPETHSellPriceMultQty)/+_.sum(XRPETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(XRPETHBuy), _.sum(XRPETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(XRPETHBuy), _.sum(XRPETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="column">
            <table class="ui small very compact table">
              <thead>
                <tr><th>XRPETH</th>
                <th>(<%= moment().subtract(90, 'days').fromNow(); %>)</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Count Buy</td>
                  <td>
                    <% 
                      var XRPETHBuy = [];
                      var XRPETHSell = [];
                      var XRPETHBuyPriceMultQty = [];
                      var XRPETHSellPriceMultQty = [];
                      for (var i = 0 ; i < tradeHistory.length; i++) {
                        if(tradeHistory[i].type === "BUY" && tradeHistory[i].market === "XRPETH" && (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          XRPETHBuy.push(tradeHistory[i].amount);
                          XRPETHBuyPriceMultQty.push(tradeHistory[i].total);
                        } 
                        else if(tradeHistory[i].type === "SELL" && tradeHistory[i].market === "XRPETH" &&  (moment(tradeHistory[i].date, 'YYYY-MM-DD hh:mm:ss').unix() > moment().subtract(90, 'days').unix())) {
                          XRPETHSell.push(tradeHistory[i].amount);
                          XRPETHSellPriceMultQty.push(tradeHistory[i].total);
                        } %>
                    <% } %>
                    <%= numeral(XRPETHBuy.length).format('0,0') %>
                  </td>
                </tr>
                <tr>
                  <td>Count Sell</td>
                  <td><%= numeral(XRPETHSell.length).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Buy</td>
                  <td><%= numeral(_.sum(XRPETHBuy)).format('0,0') %></td>
                </tr>
                <tr>
                  <td>Qty Sell</td>
                  <td><%= numeral(_.sum(XRPETHSell)).format('0,0') %></td>
                </tr>
                <tr>
                  <% 
                    var weightedBuy = +_.sum(XRPETHBuyPriceMultQty)/+_.sum(XRPETHBuy);
                    var weightedSell = +_.sum(XRPETHSellPriceMultQty)/+_.sum(XRPETHSell)
                  %>
                  <td>Weighted Buy Price</td>
                  <td><%= weightedBuy.toFixed(8) %></td>
                </tr>
                <tr>
                  <td>Weighted Sell Price</td>
                  <td><%= weightedSell.toFixed(8) %></td>
                </tr>
                <% if ((+weightedSell -+weightedBuy) > 0) { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui green message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(XRPETHBuy), _.sum(XRPETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } else { %>
                <tr>
                  <td>Avg. Profit or Loss (ETH) & Spread (%)</td>
                  <td class="ui red message"><%= ((+weightedSell -+weightedBuy) * Math.min(_.sum(XRPETHBuy), _.sum(XRPETHSell))).toFixed(4) + " ETH" + " or " + (((weightedSell/weightedBuy)-1) * 100).toFixed(2) + " %" %></td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
    </div>  
    
    <br>
    
  </div>
</center>

<br>
<br>

<div style="font-size:smaller;" class="ui mini inverted vertical footer segment">
  <center
    <p>
      <img class="ui small image" style="opacity: 0.5; width:60px; height:50px;" src="/uploads/robot4.png">
      Binance Crypto Bot
    </p>
    <p>Developed by <strong>Mospretmen</strong></p>
  </center>  
</div>

<% include partials/footer %>
