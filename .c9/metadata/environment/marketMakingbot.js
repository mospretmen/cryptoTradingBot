{"filter":false,"title":"marketMakingbot.js","tooltip":"/marketMakingbot.js","undoManager":{"mark":21,"position":21,"stack":[[{"start":{"row":606,"column":26},"end":{"row":606,"column":70},"action":"remove","lines":[", {test: mongoose.tradingbot.tradehistory});"],"id":2},{"start":{"row":606,"column":26},"end":{"row":606,"column":27},"action":"insert","lines":[")"]}],[{"start":{"row":605,"column":0},"end":{"row":605,"column":2},"action":"remove","lines":["  "],"id":3},{"start":{"row":604,"column":28},"end":{"row":605,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":600,"column":0},"end":{"row":603,"column":0},"action":"remove","lines":["","","// app.use('/', route);",""],"id":4}],[{"start":{"row":602,"column":27},"end":{"row":602,"column":28},"action":"insert","lines":[";"],"id":5}],[{"start":{"row":324,"column":0},"end":{"row":595,"column":9},"action":"remove","lines":["/////////////////////////////////////////////////////// EOS/ETH TRADING BOT ///////////////////////////////////////////////////////","","setInterval(function(){","  //GET Chart Data","  binance.candlesticks(\"EOSETH\", \"3m\", (error, ticks, symbol) => {","    // console.log(\"candlesticks()\", ticks, ticks[19][4]);","    let last_tick = ticks[ticks.length - 1];","    let [time, open, high, low, close, volume, closeTime, assetVolume, trades, buyBaseVolume, buyAssetVolume, ignored] = last_tick;","    ","      //Compare Technical Indicators","      var array20Period = new Array(); ","      ","      for (var i = 0; i < 20; i++) {","        array20Period.push(Number(ticks[i][4]));","      }","      ","      var inputRSI = {","        values : array20Period,","        period : 14","      };","      ","      var rsi = RSI.calculate(inputRSI)[RSI.calculate(inputRSI).length - 1];","      var roc3 = ROC.calculate({period : 3, values : array20Period})[ROC.calculate({period : 3, values : array20Period}).length - 1];","      var roc7 = ROC.calculate({period : 7, values : array20Period})[ROC.calculate({period : 7, values : array20Period}).length - 1];","      var roc10 = ROC.calculate({period : 10, values : array20Period})[ROC.calculate({period : 10, values : array20Period}).length - 1];","      var roc14 = ROC.calculate({period : 14, values : array20Period})[ROC.calculate({period : 14, values : array20Period}).length - 1];","","      ","      var sigmaB1 = 2.1;","      var sigmaB2 = 2.6;","      var sigmaB3 = 3.1;","      var sigmaS1 = 2.1;","      var sigmaS2 = 2.6;","      var sigmaS3 = 3.1;","      var qtyTrade1 = 0.8;","      var qtyTrade2 = 1.6;","      var qtyTrade3 = 2.4;","      var avg20Period = +math.mean(array20Period).toFixed(6);","      var std20Period = +math.std(array20Period);","      var upperLimit = +(avg20Period + (std20Period * sigmaS1)).toFixed(6);","      var lowerLimit = +(avg20Period - (std20Period * sigmaB1)).toFixed(6);","      var bollingerSpread = 1.03;","      ","        if(Number(ticks[19][4]).toFixed(6) <= (avg20Period + -(std20Period * sigmaB1)) ","        && (upperLimit/lowerLimit) > bollingerSpread","        && rsi < 38","        || roc3 < -4","        || roc7 < -4","        || roc10 < -4","        || roc14 < -4) {","        ","        // Execute Trade Based on Technical Indicator Condition. ","        setTimeout(function(){  ","          ","          binance.cancelOrders(\"EOSETH\", (error, response, symbol) => {","            console.log(symbol+\" cancel response:\", response);","          });","          ","          binance.buy(\"EOSETH\", qtyTrade1, Number(ticks[19][4]).toFixed(6));","          ","        },400);","        ","        } else if(Number(ticks[19][4]).toFixed(6) <= (avg20Period + -(std20Period * sigmaB2)) ","        && (upperLimit/lowerLimit) > bollingerSpread","        && rsi < 38","        || roc3 < -6","        || roc7 < -6","        || roc10 < -6","        || roc14 < -6) {","        ","        // Execute Trade Based on Technical Indicator Condition. ","        setTimeout(function(){  ","          ","          binance.cancelOrders(\"EOSETH\", (error, response, symbol) => {","            console.log(symbol+\" cancel response:\", response);","          });","          ","          binance.buy(\"EOSETH\", qtyTrade2, Number(ticks[19][4]).toFixed(6));","          ","        },200);","        ","        } else if(Number(ticks[19][4]).toFixed(6) <= (avg20Period + -(std20Period * sigmaB3)) ","        && (upperLimit/lowerLimit) > bollingerSpread","        && rsi < 38","        || roc3 < -8","        || roc7 < -8","        || roc10 < -8","        || roc14 < -8) {","        ","        // Execute Trade Based on Technical Indicator Condition. ","        setTimeout(function(){  ","          ","          binance.cancelOrders(\"EOSETH\", (error, response, symbol) => {","            console.log(symbol+\" cancel response:\", response);","          });","          ","          binance.buy(\"EOSETH\", qtyTrade3, Number(ticks[19][4]).toFixed(6));","          ","        },600);","          ","        } else if (Number(ticks[19][4]).toFixed(6) >= (avg20Period + +(std20Period * sigmaS1)) ","        && (upperLimit/lowerLimit) > bollingerSpread","        && rsi > 60","        || roc3 > 4","        || roc7 > 4","        || roc10 > 4","        || roc14 > 4) {","          ","        setTimeout(function(){    ","          ","          binance.cancelOrders(\"EOSETH\", (error, response, symbol) => {","            console.log(symbol+\" cancel response:\", response);","          });","          ","          binance.sell(\"EOSETH\", qtyTrade1, Number(ticks[19][4]).toFixed(6));","          ","        },600);  ","        ","        } else if (Number(ticks[19][4]).toFixed(6) >= (avg20Period + +(std20Period * sigmaS2)) ","        && (upperLimit/lowerLimit) > bollingerSpread ","        && rsi > 60","        || roc3 > 6","        || roc7 > 6","        || roc10 > 6","        || roc14 > 6) {","          ","        setTimeout(function(){    ","          ","          binance.cancelOrders(\"EOSETH\", (error, response, symbol) => {","            console.log(symbol+\" cancel response:\", response);","          });","          ","          binance.sell(\"EOSETH\", qtyTrade2, Number(ticks[19][4]).toFixed(6));","          ","        },400);  ","        ","        } else if (Number(ticks[19][4]).toFixed(6) >= (avg20Period + +(std20Period * sigmaS3)) ","        && (upperLimit/lowerLimit) > bollingerSpread","        && rsi > 60","        || roc3 > 8","        || roc7 > 8","        || roc10 > 8","        || roc14 > 8) {","          ","        setTimeout(function(){    ","          ","          binance.cancelOrders(\"EOSETH\", (error, response, symbol) => {","            console.log(symbol+\" cancel response:\", response);","          });","          ","          binance.sell(\"EOSETH\", qtyTrade3, Number(ticks[19][4]).toFixed(6));","          ","        },200); ","          ","        } else {","          ","          ","    console.log('============================================================');      ","    console.log(new Date().toLocaleString()); console.log(colors.cyan('Waiting for trade... => ' + symbol).bold)}","    console.log('------------------------------------------------------------');","      if( +close > +avg20Period) {console.log('^^^^^^^^^^^^^^^^^^^^^^^^ Trend is UP ^^^^^^^^^^^^^^^^^^^^^^^^'.bgGreen + \"\\n\")} ","      else {console.log('________________________ Trend is DOWN ________________________'.bgRed + \"\\n\")} ","    console.log(colors.underline(`Price Data =>`));","        if(Number(close) > upperLimit) {console.log(\"Last Close: \" + colors.green(close));","    } else if (Number(close) < lowerLimit) {","      console.log(\"Last Close: \" + colors.red(close));","    } else {","      console.log(\"Last Close: \" + Number(close).toFixed(6));","    }","    console.log(\"Avg 20 Period: \" + avg20Period);","    console.log(\"Upper Limit @Sigma Lvl. \" + sigmaS1 + \" = \" + upperLimit);","    console.log(\"Lower Limit @Sigma Lvl. \" + sigmaB1 + \" = \" + lowerLimit);","    console.log(\"Bollinger Bands Spread: \" + colors.yellow((((upperLimit/lowerLimit)-1)*100).toFixed(2) + \" %\"));","    console.log('RSI: ' + colors.yellow(rsi));","    console.log(\"ROC 3,7,10,14 period: \" + colors.yellow(`${roc3.toFixed(2)}, ${roc7.toFixed(2)}, ${roc10.toFixed(2)}, ${roc14.toFixed(2)} %`));","    console.log('------------------------------------------------------------' + \"\\n\");","  ","    ","      binance.trades(\"EOSETH\", (error, trades, symbol) => {","","            var timeElapsedDays = 365;","            var buyPrice = [];","            var sellPrice = [];","            var buyPriceMultbyQty = [];","            var sellPriceMultbyQty = [];","            var buyQty = [];","            var sellQty = [];","","            for (var i = 0; i < trades.length; i++){","              ","              if (trades[i].isBuyer === true && trades[i].time >= moment().subtract(timeElapsedDays, 'days').unix() * 1000) {","                buyPriceMultbyQty.push(Number(trades[i].price) * Number(trades[i].qty));","                buyPrice.push(Number(trades[i].price));","                buyQty.push(Number(trades[i].qty));","                ","              } else if (trades[i].isBuyer === false && trades[i].time >= moment().subtract(timeElapsedDays, 'days').unix() * 1000) {","                sellPriceMultbyQty.push(Number(trades[i].price) * Number(trades[i].qty));","                sellPrice.push(Number(trades[i].price));","                sellQty.push(Number(trades[i].qty));","              }","            }","            ","          var weightedBuyPrice = (math.sum(buyPriceMultbyQty)/math.sum(buyQty)).toFixed(6);","          var weightedSellPrice = (math.sum(sellPriceMultbyQty)/math.sum(sellQty)).toFixed(6);","            ","          console.log(colors.underline(`${symbol} Trade History Last 500 trades => `) + \"\\n\"","          + `Count Buy Trades: ${buyPrice.length} \\n`","          + `Count Sell Trades: ${sellPrice.length} \\n`","          + `Total Qty Bought: ${math.sum(buyQty)} \\n`","          + `Total Qty Sold: ${math.sum(sellQty)} \\n`","          + `Weighted Buy Price: ${weightedBuyPrice} \\n`","          + `Weighted Sell Price: ${weightedSellPrice} \\n`","          + 'Total Profit/Loss: ' + ((weightedSellPrice - weightedBuyPrice) * Math.min(Number(math.sum(sellQty)), Number(math.sum(buyQty))) ).toFixed(4) + ' ETH');","          ","          var mktMakerProfitOrLoss = Number((((((weightedSellPrice)/weightedBuyPrice) - 1) * 100) - 0.2).toFixed(2));","          ","          if(mktMakerProfitOrLoss > 0 ) {","            console.log(\"Avg MKT_Maker Spread: \" + colors.green(mktMakerProfitOrLoss + ' %').bold);","            } else { ","              console.log(\"Avg MKT_Maker Spread: \" + colors.red(mktMakerProfitOrLoss + ' %').bold);","            }  ","          console.log('------------------------------------------------------------'  + \"\\n\");","        });","        ","      binance.trades(\"EOSETH\", (error, trades, symbol) => {","        ","            var timeElapsedDays = 1;","            var buyPrice = [];","            var sellPrice = [];","            var buyPriceMultbyQty = [];","            var sellPriceMultbyQty = [];","            var buyQty = [];","            var sellQty = [];","","            for (var i = 0; i < trades.length; i++){","              ","              if (trades[i].isBuyer === true && trades[i].time >= moment().subtract(timeElapsedDays, 'days').unix() * 1000) {","                buyPriceMultbyQty.push(Number(trades[i].price) * Number(trades[i].qty));","                buyPrice.push(Number(trades[i].price));","                buyQty.push(Number(trades[i].qty));","                ","              } else if (trades[i].isBuyer === false && trades[i].time >= moment().subtract(timeElapsedDays, 'days').unix() * 1000) {","                sellPriceMultbyQty.push(Number(trades[i].price) * Number(trades[i].qty));","                sellPrice.push(Number(trades[i].price));","                sellQty.push(Number(trades[i].qty));","              }","            }","            ","          var weightedBuyPrice = (math.sum(buyPriceMultbyQty)/math.sum(buyQty)).toFixed(6);","          var weightedSellPrice = (math.sum(sellPriceMultbyQty)/math.sum(sellQty)).toFixed(6);","            ","          console.log(colors.underline(`${symbol} Trade History Last 24 hrs => `) + \"\\n\"","          + `Count Buy Trades: ${buyPrice.length} \\n`","          + `Count Sell Trades: ${sellPrice.length} \\n`","          + `Total Qty Bought: ${math.sum(buyQty)} \\n`","          + `Total Qty Sold: ${math.sum(sellQty)} \\n`","          + `Weighted Buy Price: ${weightedBuyPrice} \\n`","          + `Weighted Sell Price: ${weightedSellPrice} \\n`","          + 'Total Profit/Loss: ' + ((weightedSellPrice - weightedBuyPrice) * Math.min(Number(math.sum(sellQty)), Number(math.sum(buyQty))) ).toFixed(4) + ' ETH');","          ","          var mktMakerProfitOrLoss = Number((((((weightedSellPrice)/weightedBuyPrice) - 1) * 100) - 0.2).toFixed(2));","          ","          if(mktMakerProfitOrLoss > 0 ) {","            console.log(\"Avg MKT_Maker Spread: \" + colors.green(mktMakerProfitOrLoss + ' %').bold);","              } else { ","              console.log(\"Avg MKT_Maker Spread: \" + colors.red(mktMakerProfitOrLoss + ' %').bold);","            }  ","          console.log('------------------------------------------------------------'  + \"\\n\");","        });","             ","  }, {limit: 20, endTime: Date.now()});","}, 6000);"],"id":6},{"start":{"row":323,"column":0},"end":{"row":324,"column":0},"action":"remove","lines":["",""]},{"start":{"row":322,"column":0},"end":{"row":323,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":60,"column":24},"end":{"row":60,"column":30},"action":"remove","lines":["XRPETH"],"id":7},{"start":{"row":60,"column":24},"end":{"row":60,"column":30},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":111,"column":32},"end":{"row":111,"column":38},"action":"remove","lines":["XRPETH"],"id":8},{"start":{"row":111,"column":32},"end":{"row":111,"column":38},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":115,"column":23},"end":{"row":115,"column":29},"action":"remove","lines":["XRPETH"],"id":9},{"start":{"row":115,"column":23},"end":{"row":115,"column":29},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":129,"column":32},"end":{"row":129,"column":38},"action":"remove","lines":["XRPETH"],"id":10},{"start":{"row":129,"column":32},"end":{"row":129,"column":38},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":133,"column":23},"end":{"row":133,"column":29},"action":"remove","lines":["XRPETH"],"id":11},{"start":{"row":133,"column":23},"end":{"row":133,"column":29},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":147,"column":32},"end":{"row":147,"column":38},"action":"remove","lines":["XRPETH"],"id":12},{"start":{"row":147,"column":32},"end":{"row":147,"column":38},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":151,"column":23},"end":{"row":151,"column":29},"action":"remove","lines":["XRPETH"],"id":13},{"start":{"row":151,"column":23},"end":{"row":151,"column":29},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":164,"column":32},"end":{"row":164,"column":38},"action":"remove","lines":["XRPETH"],"id":14},{"start":{"row":164,"column":32},"end":{"row":164,"column":38},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":168,"column":24},"end":{"row":168,"column":30},"action":"remove","lines":["XRPETH"],"id":15},{"start":{"row":168,"column":24},"end":{"row":168,"column":30},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":181,"column":32},"end":{"row":181,"column":38},"action":"remove","lines":["XRPETH"],"id":16},{"start":{"row":181,"column":32},"end":{"row":181,"column":38},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":185,"column":24},"end":{"row":185,"column":30},"action":"remove","lines":["XRPETH"],"id":17},{"start":{"row":185,"column":24},"end":{"row":185,"column":30},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":198,"column":32},"end":{"row":198,"column":38},"action":"remove","lines":["XRPETH"],"id":18},{"start":{"row":198,"column":32},"end":{"row":198,"column":38},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":202,"column":24},"end":{"row":202,"column":30},"action":"remove","lines":["XRPETH"],"id":19},{"start":{"row":202,"column":24},"end":{"row":202,"column":30},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":228,"column":22},"end":{"row":228,"column":28},"action":"remove","lines":["XRPETH"],"id":20},{"start":{"row":228,"column":22},"end":{"row":228,"column":28},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":274,"column":22},"end":{"row":274,"column":28},"action":"remove","lines":["XRPETH"],"id":21},{"start":{"row":274,"column":22},"end":{"row":274,"column":28},"action":"insert","lines":["ADAETH"]}],[{"start":{"row":56,"column":61},"end":{"row":56,"column":62},"action":"remove","lines":["P"],"id":22},{"start":{"row":56,"column":60},"end":{"row":56,"column":61},"action":"remove","lines":["R"]},{"start":{"row":56,"column":59},"end":{"row":56,"column":60},"action":"remove","lines":["X"]}],[{"start":{"row":56,"column":59},"end":{"row":56,"column":60},"action":"insert","lines":["A"],"id":23},{"start":{"row":56,"column":60},"end":{"row":56,"column":61},"action":"insert","lines":["D"]},{"start":{"row":56,"column":61},"end":{"row":56,"column":62},"action":"insert","lines":["A"]}]]},"ace":{"folds":[],"scrolltop":1425,"scrollleft":0,"selection":{"start":{"row":69,"column":37},"end":{"row":69,"column":37},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":122,"state":"no_regex","mode":"ace/mode/javascript"}},"timestamp":1546578113109,"hash":"161449bf31acbf11779553106d47b7607c17ce57"}