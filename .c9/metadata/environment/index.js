{"changed":true,"filter":false,"title":"index.js","tooltip":"/index.js","value":"var express = require('express');\nvar app = express();\nvar fs = require('fs');\nvar bodyParser = require('body-parser');\nvar methodOverride = require('method-override');\nvar _ = require('lodash');\nvar math = require('mathjs');\nvar moment = require('moment');\nvar colors = require('colors');\nvar numeral = require('numeral');\n// var route = require(\"./routes/route.js\");\nvar tradeHistory = require('./data/tradeHistory.json');\nvar balanceHistory = require('./data/balanceHistory.json');\nvar depositHistory = require('./data/depositHistory.json');\nvar withdrawHistory = require('./data/withdrawHistory.json');\n\n\napp.locals._ = _;\napp.locals.moment = moment;\napp.locals.numeral = numeral;\n\n//===============================================================================================================================\n//      Binance CONFIG\n//===============================================================================================================================\n\n\nconst binance = require('node-binance-api')().options({\n  APIKEY: 'KkzLIQ4Je2UwkehagnIaY5Jk1tsY4Yo3BAZqUy6WcydDtF4jtXTftHmXVtVUs5u9',\n  APISECRET: 'Z5nxpN8xbj1gQ27bEgTANgOGGd8JzsZVOKdgnOy3ta18Tfh6itJGiA9eDmYUwn7f',\n  useServerTime: true, // If you get timestamp errors, synchronize to server time at startup\n  test: false // If you want to use sandbox mode where orders are simulated\n});\n\n\n//===============================================================================================================================\n//      DATABASE CONFIG\n//===============================================================================================================================\n\n\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://admin:qqw3mqw8@ds155651.mlab.com:55651/tradingbot', { useNewUrlParser: true });\n\n\n//===============================================================================================================================\n//      BodyParser + MethodOverride + EJS CONFIG\n//===============================================================================================================================\n\n\napp.set(\"view engine\", \"ejs\");\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: true}));\napp.use(methodOverride(\"_method\"));\napp.use(express.static(__dirname + \"/public\"));\n\n\n//===============================================================================================================================\n//      DATA COLLECTION: Back Testing Data\n//===============================================================================================================================\n\n\nbinance.candlesticks(\"XRPETH\", \"3m\", (error, ticks, symbol) => {\n  let last_tick = ticks[ticks.length - 1];\n  let [time, open, high, low, close, volume, closeTime, assetVolume, trades, buyBaseVolume, buyAssetVolume, ignored] = last_tick;\n  fs.writeFileSync('./data/XRP/XRPETHHistory3m.json', JSON.stringify(ticks,null, \" \"));\n}, {limit: 500, endTime: Date.now()});\n\n\nbinance.candlesticks(\"XRPETH\", \"5m\", (error, ticks, symbol) => {\n  let last_tick = ticks[ticks.length - 1];\n  let [time, open, high, low, close, volume, closeTime, assetVolume, trades, buyBaseVolume, buyAssetVolume, ignored] = last_tick;\n  fs.writeFileSync('./data/XRP/XRPETHHistory5m.json', JSON.stringify(ticks,null, \" \"));\n}, {limit: 500, endTime: Date.now()});\n\n\n//=======================================/========================================================================================\n//      ROUTES\n//===============================================================================================================================\n\n// app.use('/', route);\n\napp.get('/', (req, res) => {\n    res.render('index.ejs', \n      {\n        tradeHistory: JSON.parse(fs.readFileSync('./data/tradeHistory.json')), \n        balanceHistory: JSON.parse(fs.readFileSync('./data/balanceHistory.json')), \n        depositHistory: depositHistory, \n        withdrawHistory: withdrawHistory\n      } \n    );\n});\n\napp.get('/backTest', (req, res) => {\n    res.render('backTest.ejs',\n      {\n        tradeHistory: JSON.parse(fs.readFileSync('./data/tradeHistory.json')), \n        balanceHistory: JSON.parse(fs.readFileSync('./data/balanceHistory.json')), \n        depositHistory: depositHistory, \n        withdrawHistory: withdrawHistory\n      } \n    );\n});\n\napp.get('/login', (req, res) => {\n  res.render('login.ejs');\n});\n\napp.get('/register', (req, res) => {\n  res.render('register.ejs');\n});\n\n//===============================================================================================================================\n//      SERVER START\n//===============================================================================================================================\n\n\napp.listen(8082, process.env.IP, function(){\n   console.log('server start...' + process.env.IP + \":\" + 8082); \n});","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":1073.90625,"scrollleft":0,"selection":{"start":{"row":94,"column":79},"end":{"row":94,"column":79},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":85,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1548542421082}